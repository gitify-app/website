---
import { Icon } from "astro-icon/components";
import { format, parseISO } from "date-fns";
import { Octokit } from "octokit";

import { URLs, siteMetadata } from "~/constants";
import type {
  DownloadLink,
  DownloadLinks,
  HeroData,
  ReleaseAsset,
} from "../types";

const octokit = new Octokit();

const getDownloadLinks = (assets: ReleaseAsset[]): DownloadLinks => {
  const getAssetLink = (filenameRegex: RegExp): string => {
    const asset = assets.find((item) => item.name.match(filenameRegex));
    return asset ? asset.browser_download_url : URLs.GITHUB.LATEST_RELEASE;
  };

  const supportedOSs: DownloadLink[] = [
    {
      os: "macOS",
      name: "macOS (Universal)",
      url: getAssetLink(/Gitify-\d+.\d+.\d+-universal.dmg/g),
      isPrimary: true,
    },
    {
      os: "Windows",
      name: "Windows",
      url: getAssetLink(/Gitify-Setup-\d+.\d+.\d+.exe/g),
      isPrimary: true,
    },
    {
      os: "Linux",
      name: "Linux (AppImage)",
      url: getAssetLink(/Gitify-\d+.\d+.\d+.AppImage/g),
      isPrimary: true,
    },
    {
      os: "Linux",
      name: "Linux (deb)",
      url: getAssetLink(/gitify_\d+.\d+.\d+_amd64.deb/g),
    },
    {
      os: "Linux",
      name: "Linux (rpm)",
      url: getAssetLink(/gitify-\d+.\d+.\d+.x86_64.rpm/g),
    },
  ];

  const primaryDownloadLinks = supportedOSs.filter(
    ({ isPrimary, url }) => url && isPrimary,
  );

  const altDownloadLinks = supportedOSs.filter(
    ({ isPrimary, url }) => url && !isPrimary,
  );

  return {
    primary: primaryDownloadLinks.length
      ? primaryDownloadLinks
      : [supportedOSs[0]],
    alt: altDownloadLinks,
  };
};

const loadInitialData = async (): Promise<HeroData> => {
  try {
    const latestRelease = await octokit.rest.repos.getLatestRelease({
      owner: siteMetadata.repo.owner,
      repo: siteMetadata.repo.name,
    });

    const downloadLinks = getDownloadLinks(latestRelease.data.assets);

    return {
      downloadLinks,
      version: latestRelease.data.name,
      releaseDate: latestRelease.data.published_at
        ? format(latestRelease.data.published_at, "dd/MM/yyyy")
        : "",
    };
  } catch (error) {
    return {
      downloadLinks: {
        alt: [],
        primary: [],
      },
      version: "",
      releaseDate: "",
    };
  }
};

const { downloadLinks, version, releaseDate } = await loadInitialData();
---

<div class="text-sm mt-4">
  {
    version ? (
      <>
        <div class="sm:flex md:grid md:grid-cols-2">
          {downloadLinks.primary.map((item) => (
            <a
              href={item.url}
              class:list={[
                "flex items-center mb-3 px-4 py-3 mr-4",
                "font-semibold text-white hover:text-white",
                "rounded-md bg-green-700 hover:bg-green-800 ",
              ]}
            >
              <div class="flex flex-row gap-2 items-center">
                <Icon name="line-md:cloud-alt-download-filled" size={24} />
                <span>{item.name}</span>
              </div>
            </a>
          ))}
        </div>
        <div class="w-80">
          <p>
            Latest version: <a href={URLs.GITHUB.LATEST_RELEASE}>{version}</a>
          </p>
          <p class="mt-1">Released on: {releaseDate}</p>
          {downloadLinks.alt.length > 0 && (
            <p class="mt-1">
              Also available on:
              <ul class="list-disc list-inside ml-4">
                {downloadLinks.alt.map((platform) => (
                  <li class="py-0.5">
                    <a href={platform.url || URLs.GITHUB.LATEST_RELEASE}>
                      {platform.name}
                    </a>
                  </li>
                ))}
              </ul>
            </p>
          )}
        </div>
      </>
    ) : (
      <>
        <div class="flex">
          <a
            class="flex items-center mb-3 px-4 py-3 font-semibold text-white rounded-md bg-green-700 hover:bg-green-800"
            href={URLs.GITHUB.LATEST_RELEASE}
          >
            <div class="flex flex-row gap-2 items-center">
              <Icon name="line-md:cloud-alt-download-filled" size={24} />
              <span>View GitHub Releases</span>
            </div>
          </a>
        </div>
        <div>
          <div>Couldn&apos;t get latest version.</div>
        </div>
      </>
    )
  }
</div>
